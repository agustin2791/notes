{"remainingRequest":"/Users/jdiazbarriga/software/notes/notes/node_modules/babel-loader/lib/index.js!/Users/jdiazbarriga/software/notes/notes/node_modules/eslint-loader/index.js??ref--13-0!/Users/jdiazbarriga/software/notes/notes/src/store.js","dependencies":[{"path":"/Users/jdiazbarriga/software/notes/notes/src/store.js","mtime":1551141888428},{"path":"/Users/jdiazbarriga/software/notes/notes/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jdiazbarriga/software/notes/notes/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jdiazbarriga/software/notes/notes/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    user: {\n      id: 1,\n      username: 'jdiazbarriga',\n      email: 'jagustin2791@gmail.com'\n    },\n    subjects: [{\n      id: 1,\n      name: 'PJM 460',\n      user_id: 1\n    }, {\n      id: 2,\n      name: 'CSC 372',\n      user_id: 1\n    }],\n    sections: [{\n      id: 1,\n      name: 'Chapter 1',\n      subject_id: 1,\n      user_id: 1\n    }, {\n      id: 2,\n      name: 'Chapter 2',\n      subject_id: 1,\n      user_id: 1\n    }, {\n      id: 3,\n      name: 'Chapter 1',\n      subject_id: 2,\n      user_id: 1\n    }],\n    notes: [{\n      id: 1,\n      note: 'This is a note for this chapter (chapter 1) of the this subject (PJM 460)',\n      subject_id: 1,\n      section_id: 1,\n      user_id: 1\n    }, {\n      id: 2,\n      note: 'This is a note for this chapter (chapter 2) of the this subject (PJM 460)',\n      subject_id: 1,\n      section_id: 2,\n      user_id: 1\n    }, {\n      id: 3,\n      note: 'This is a note for this chapter (chapter 1) of the this subject (CSC 472)',\n      subject_id: 2,\n      section_id: 3,\n      user_id: 1\n    }],\n    flash_cards: [{\n      id: 1,\n      word: 'First word',\n      def: 'This is the def of the first word',\n      subject_id: 1,\n      section_id: 1,\n      user_id: 1\n    }]\n  },\n  mutations: {\n    'NEW_SUBJECT': function NEW_SUBJECT(state, subject) {\n      if (subject) {\n        subject.id = Math.floor(Math.random() * 100);\n        state.subjects.push(subject);\n        return state.subjects;\n      }\n\n      return state.subjects;\n    },\n    'NEW_SECTION': function NEW_SECTION(state, section) {\n      if (section) {\n        section.id = Math.floor(Math.random() * 100);\n        state.sections.push(section);\n        return state.sections;\n      }\n\n      return state.sections;\n    },\n    'NEW_NOTE': function NEW_NOTE(state, note) {\n      if (note) {\n        note.id = Math.floor(Math.random() * 100);\n        state.notes.push(note);\n        return state.notes;\n      }\n\n      return state.notes;\n    },\n    'EDIT_NOTE': function EDIT_NOTE(state, changes) {\n      if (changes) {\n        var editNote = state.notes.find(function (note) {\n          if (note.id == changes.id) {\n            return note;\n          }\n        });\n        var indexNote = state.notes.indexOf(editNote);\n        editNote.note = changes.edit;\n        state.notes.splice(indexNote, 1, editNote);\n        return state.notes;\n      }\n    },\n    'DELETE_NOTE': function DELETE_NOTE(state, note) {\n      if (note) {\n        var delNote = state.notes.find(function (note) {\n          if (note.id == note) {\n            return note;\n          }\n        });\n        var indexNote = state.notes.indexOf(delNote);\n        state.notes.splice(indexNote, 1);\n        return state.notes;\n      }\n    },\n    'NEW_CARD': function NEW_CARD(state, card) {\n      if (card) {\n        card.id = Math.floor(Math.random() * 100);\n        state.flash_cards.push(card);\n        return state.flash_cards;\n      }\n    }\n  },\n  actions: {\n    newSubject: function newSubject(_ref, subject) {\n      var commit = _ref.commit;\n      commit('NEW_SUBJECT', subject);\n    },\n    newSection: function newSection(_ref2, section) {\n      var commit = _ref2.commit;\n      commit('NEW_SECTION', section);\n    },\n    newNote: function newNote(_ref3, note) {\n      var commit = _ref3.commit;\n      commit('NEW_NOTE', note);\n    },\n    editNote: function editNote(_ref4, changes) {\n      var commit = _ref4.commit;\n      commit('EDIT_NOTE', changes);\n    },\n    newCard: function newCard(_ref5, card) {\n      var commit = _ref5.commit;\n      commit('NEW_CARD', card);\n    }\n  },\n  getters: {\n    getSubjects: function getSubjects(state) {\n      return state.subjects;\n    },\n    getSections: function getSections(state) {\n      return function (sub) {\n        return state.sections.filter(function (sec) {\n          return sec.subject_id == sub;\n        });\n      };\n    },\n    getNotes: function getNotes(state) {\n      return function (sub, sec) {\n        return state.notes.filter(function (note) {\n          return note.subject_id == sub && note.section_id == sec;\n        });\n      };\n    },\n    getCards: function getCards(state) {\n      return function (sub, sec) {\n        return state.flash_cards.filter(function (note) {\n          return note.subject_id == sub && note.section_id == sec;\n        });\n      };\n    }\n  }\n});",{"version":3,"sources":["/Users/jdiazbarriga/software/notes/notes/src/store.js"],"names":["Vue","Vuex","use","Store","state","user","id","username","email","subjects","name","user_id","sections","subject_id","notes","note","section_id","flash_cards","word","def","mutations","subject","Math","floor","random","push","section","changes","editNote","find","indexNote","indexOf","edit","splice","delNote","card","actions","newSubject","commit","newSection","newNote","newCard","getters","getSubjects","getSections","sub","filter","sec","getNotes","getCards"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n  \tuser: { id: 1, username: 'jdiazbarriga', email: 'jagustin2791@gmail.com' },\n  \tsubjects: [\n  \t\t{\n  \t\t\tid: 1,\n  \t\t\tname: 'PJM 460',\n  \t\t  \tuser_id: 1\n  \t\t},\n  \t\t{\n  \t\t\tid: 2,\n  \t\t\tname: 'CSC 372',\n  \t\t\tuser_id: 1\n  \t\t}\n  \t],\n  \tsections: [\n  \t\t{\n  \t\t\tid: 1,\n  \t\t\tname: 'Chapter 1',\n  \t\t\tsubject_id: 1,\n  \t\t\tuser_id: 1\n  \t\t},\n  \t\t{\n  \t\t\tid: 2,\n  \t\t\tname: 'Chapter 2',\n  \t\t\tsubject_id: 1,\n  \t\t\tuser_id: 1\n  \t\t},\n  \t\t{\n  \t\t\tid: 3,\n  \t\t\tname: 'Chapter 1',\n  \t\t\tsubject_id: 2,\n  \t\t\tuser_id: 1\n  \t\t}\n  \t],\n  \tnotes: [\n  \t\t{\n  \t\t\tid: 1,\n  \t\t\tnote: 'This is a note for this chapter (chapter 1) of the this subject (PJM 460)',\n  \t\t\tsubject_id: 1,\n  \t\t\tsection_id: 1,\n  \t\t\tuser_id: 1\n  \t\t},\n  \t\t{\n  \t\t\tid: 2,\n  \t\t\tnote: 'This is a note for this chapter (chapter 2) of the this subject (PJM 460)',\n  \t\t\tsubject_id: 1,\n  \t\t\tsection_id: 2,\n  \t\t\tuser_id: 1\n  \t\t},\n  \t\t{\n  \t\t\tid: 3,\n  \t\t\tnote: 'This is a note for this chapter (chapter 1) of the this subject (CSC 472)',\n  \t\t\tsubject_id: 2,\n  \t\t\tsection_id: 3,\n  \t\t\tuser_id: 1\n  \t\t}\n  \t],\n  \tflash_cards: [\n  \t\t{\n  \t\t\tid: 1,\n  \t\t\tword: 'First word',\n  \t\t\tdef: 'This is the def of the first word',\n  \t\t\tsubject_id: 1,\n  \t\t\tsection_id: 1,\n  \t\t\tuser_id: 1\n  \t\t}\n  \t]\n  },\n  mutations: {\n  \t'NEW_SUBJECT'(state, subject) {\n  \t\tif (subject) {\n  \t\t\tsubject.id = Math.floor(Math.random() * 100)\n  \t\t\tstate.subjects.push(subject)\n  \t\t\treturn state.subjects\n  \t\t}\n  \t\treturn state.subjects\n  \t},\n  \t'NEW_SECTION'(state, section) {\n  \t\tif (section) {\n  \t\t\tsection.id = Math.floor(Math.random() * 100)\n  \t\t\tstate.sections.push(section)\n  \t\t\treturn state.sections\n  \t\t}\n  \t\treturn state.sections\n  \t},\n  \t'NEW_NOTE'(state, note) {\n  \t\tif (note) {\n  \t\t\tnote.id = Math.floor(Math.random() * 100)\n  \t\t\tstate.notes.push(note)\n  \t\t\treturn state.notes\n  \t\t}\n  \t\treturn state.notes\n  \t},\n  \t'EDIT_NOTE'(state, changes) {\n  \t\tif (changes) {\n  \t\t\tlet editNote = state.notes.find(function(note) {if (note.id == changes.id) {return note}});\n  \t\t\tlet indexNote = state.notes.indexOf(editNote);\n  \t\t\teditNote.note = changes.edit;\n  \t\t\tstate.notes.splice(indexNote, 1, editNote);\n  \t\t\treturn state.notes\n  \t\t}\n  \t},\n  \t'DELETE_NOTE'(state, note) {\n  \t\tif (note) {\n  \t\t\tlet delNote = state.notes.find(function(note) { if (note.id == note) { return note }});\n  \t\t\tlet indexNote = state.notes.indexOf(delNote);\n  \t\t\tstate.notes.splice(indexNote, 1)\n  \t\t\treturn state.notes\n  \t\t}\n  \t},\n  \t'NEW_CARD'(state, card) {\n  \t\tif (card) {\n  \t\t\tcard.id = Math.floor(Math.random() * 100)\n  \t\t\tstate.flash_cards.push(card)\n  \t\t\treturn state.flash_cards\n  \t\t}\n  \t}\n  },\n  actions: {\n  \tnewSubject({ commit }, subject) {\n  \t\tcommit('NEW_SUBJECT', subject)\n  \t},\n  \tnewSection({ commit }, section) {\n  \t\tcommit('NEW_SECTION', section);\n  \t},\n  \tnewNote({ commit }, note) {\n  \t\tcommit('NEW_NOTE', note)\n  \t},\n  \teditNote({ commit }, changes) {\n  \t\tcommit('EDIT_NOTE', changes)\n  \t},\n  \tnewCard({ commit }, card) {\n  \t\tcommit('NEW_CARD', card)\n  \t}\n  },\n  getters: {\n  \tgetSubjects (state) {\n  \t\treturn state.subjects\n  \t},\n  \tgetSections (state) {\n  \t\treturn (sub) => state.sections.filter(sec => sec.subject_id == sub)\n  \t},\n  \tgetNotes (state) {\n  \t\treturn (sub, sec) => state.notes.filter(note => (note.subject_id == sub && note.section_id == sec))\n  \t},\n  \tgetCards (state) {\n  \t\treturn (sub, sec) => state.flash_cards.filter(note => (note.subject_id == sub && note.section_id == sec))\n  \t}\n  }\n})\n"]}]}