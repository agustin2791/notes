{"remainingRequest":"C:\\Users\\Agustin\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Agustin\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\software\\notes\\src\\store.js","dependencies":[{"path":"D:\\software\\notes\\src\\store.js","mtime":1551034904566},{"path":"D:\\software\\notes\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1550735037900},{"path":"C:\\Users\\Agustin\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Agustin\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    user: {\n      id: 1,\n      username: 'jdiazbarriga',\n      email: 'jagustin2791@gmail.com'\n    },\n    subjects: [{\n      id: 1,\n      name: 'PJM 460',\n      user_id: 1\n    }, {\n      id: 2,\n      name: 'CSC 372',\n      user_id: 1\n    }],\n    sections: [{\n      id: 1,\n      name: 'Chapter 1',\n      subject_id: 1,\n      user_id: 1\n    }, {\n      id: 2,\n      name: 'Chapter 2',\n      subject_id: 1,\n      user_id: 1\n    }, {\n      id: 3,\n      name: 'Chapter 1',\n      subject_id: 2,\n      user_id: 1\n    }],\n    notes: [{\n      id: 1,\n      note: 'This is a note for this chapter (chapter 1) of the this subject (PJM 460)',\n      subject_id: 1,\n      section_id: 1,\n      user_id: 1\n    }, {\n      id: 2,\n      note: 'This is a note for this chapter (chapter 2) of the this subject (PJM 460)',\n      subject_id: 1,\n      section_id: 2,\n      user_id: 1\n    }, {\n      id: 3,\n      note: 'This is a note for this chapter (chapter 1) of the this subject (CSC 472)',\n      subject_id: 2,\n      section_id: 3,\n      user_id: 1\n    }],\n    flash_cards: [{\n      id: 1,\n      word: 'First word',\n      def: 'This is the def of the first word',\n      subject_id: 1,\n      section_id: 1,\n      user_id: 1\n    }]\n  },\n  mutations: {\n    'NEW_SUBJECT': function NEW_SUBJECT(state, subject) {\n      if (subject) {\n        subject.id = Math.floor(Math.random() * 100);\n        state.subjects.push(subject);\n        return state.subjects;\n      }\n\n      return state.subjects;\n    },\n    'NEW_SECTION': function NEW_SECTION(state, section) {\n      if (section) {\n        section.id = Math.floor(Math.random() * 100);\n        state.sections.push(section);\n        return state.sections;\n      }\n\n      return state.sections;\n    },\n    'NEW_NOTE': function NEW_NOTE(state, note) {\n      if (note) {\n        note.id = Math.floor(Math.random() * 100);\n        state.notes.push(note);\n        return state.notes;\n      }\n\n      return state.notes;\n    },\n    'EDIT_NOTE': function EDIT_NOTE(state, changes) {\n      if (changes) {\n        var editNote = state.notes.find(function (note) {\n          if (note.id == changes.id) {\n            return note;\n          }\n        });\n        var indexNote = state.notes.indexOf(editNote);\n        editNote.note = changes.edit;\n        state.notes.splice(indexNote, 1, editNote);\n        return state.notes;\n      }\n    }\n  },\n  actions: {\n    newSubject: function newSubject(_ref, subject) {\n      var commit = _ref.commit;\n      commit('NEW_SUBJECT', subject);\n    },\n    newSection: function newSection(_ref2, section) {\n      var commit = _ref2.commit;\n      commit('NEW_SECTION', section);\n    },\n    newNote: function newNote(_ref3, note) {\n      var commit = _ref3.commit;\n      commit('NEW_NOTE', note);\n    },\n    editNote: function editNote(_ref4, changes) {\n      var commit = _ref4.commit;\n      commit('EDIT_NOTE', changes);\n    }\n  },\n  getters: {\n    getSubjects: function getSubjects(state) {\n      return state.subjects;\n    },\n    getSections: function getSections(state) {\n      return function (sub) {\n        return state.sections.filter(function (sec) {\n          return sec.subject_id == sub;\n        });\n      };\n    },\n    getNotes: function getNotes(state) {\n      return function (sub, sec) {\n        return state.notes.filter(function (note) {\n          return note.subject_id == sub && note.section_id == sec;\n        });\n      };\n    }\n  }\n});",{"version":3,"sources":["D:\\software\\notes\\src\\store.js"],"names":["Vue","Vuex","use","Store","state","user","id","username","email","subjects","name","user_id","sections","subject_id","notes","note","section_id","flash_cards","word","def","mutations","subject","Math","floor","random","push","section","changes","editNote","find","indexNote","indexOf","edit","splice","actions","newSubject","commit","newSection","newNote","getters","getSubjects","getSections","sub","filter","sec","getNotes"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n  \tuser: { id: 1, username: 'jdiazbarriga', email: 'jagustin2791@gmail.com' },\r\n  \tsubjects: [\r\n  \t\t{\r\n  \t\t\tid: 1,\r\n  \t\t\tname: 'PJM 460',\r\n  \t\t  \tuser_id: 1\r\n  \t\t},\r\n  \t\t{\r\n  \t\t\tid: 2,\r\n  \t\t\tname: 'CSC 372',\r\n  \t\t\tuser_id: 1\r\n  \t\t}\r\n  \t],\r\n  \tsections: [\r\n  \t\t{\r\n  \t\t\tid: 1,\r\n  \t\t\tname: 'Chapter 1',\r\n  \t\t\tsubject_id: 1,\r\n  \t\t\tuser_id: 1\r\n  \t\t},\r\n  \t\t{\r\n  \t\t\tid: 2,\r\n  \t\t\tname: 'Chapter 2',\r\n  \t\t\tsubject_id: 1,\r\n  \t\t\tuser_id: 1\r\n  \t\t},\r\n  \t\t{\r\n  \t\t\tid: 3,\r\n  \t\t\tname: 'Chapter 1',\r\n  \t\t\tsubject_id: 2,\r\n  \t\t\tuser_id: 1\r\n  \t\t}\r\n  \t],\r\n  \tnotes: [\r\n  \t\t{\r\n  \t\t\tid: 1,\r\n  \t\t\tnote: 'This is a note for this chapter (chapter 1) of the this subject (PJM 460)',\r\n  \t\t\tsubject_id: 1,\r\n  \t\t\tsection_id: 1,\r\n  \t\t\tuser_id: 1\r\n  \t\t},\r\n  \t\t{\r\n  \t\t\tid: 2,\r\n  \t\t\tnote: 'This is a note for this chapter (chapter 2) of the this subject (PJM 460)',\r\n  \t\t\tsubject_id: 1,\r\n  \t\t\tsection_id: 2,\r\n  \t\t\tuser_id: 1\r\n  \t\t},\r\n  \t\t{\r\n  \t\t\tid: 3,\r\n  \t\t\tnote: 'This is a note for this chapter (chapter 1) of the this subject (CSC 472)',\r\n  \t\t\tsubject_id: 2,\r\n  \t\t\tsection_id: 3,\r\n  \t\t\tuser_id: 1\r\n  \t\t}\r\n  \t],\r\n  \tflash_cards: [\r\n  \t\t{\r\n  \t\t\tid: 1,\r\n  \t\t\tword: 'First word',\r\n  \t\t\tdef: 'This is the def of the first word',\r\n  \t\t\tsubject_id: 1,\r\n  \t\t\tsection_id: 1,\r\n  \t\t\tuser_id: 1\r\n  \t\t}\r\n  \t]\r\n  },\r\n  mutations: {\r\n  \t'NEW_SUBJECT'(state, subject) {\r\n  \t\tif (subject) {\r\n  \t\t\tsubject.id = Math.floor(Math.random() * 100)\r\n  \t\t\tstate.subjects.push(subject)\r\n  \t\t\treturn state.subjects\r\n  \t\t}\r\n  \t\treturn state.subjects\r\n  \t},\r\n  \t'NEW_SECTION'(state, section) {\r\n  \t\tif (section) {\r\n  \t\t\tsection.id = Math.floor(Math.random() * 100)\r\n  \t\t\tstate.sections.push(section)\r\n  \t\t\treturn state.sections\r\n  \t\t}\r\n  \t\treturn state.sections\r\n  \t},\r\n  \t'NEW_NOTE'(state, note) {\r\n  \t\tif (note) {\r\n  \t\t\tnote.id = Math.floor(Math.random() * 100)\r\n  \t\t\tstate.notes.push(note)\r\n  \t\t\treturn state.notes\r\n  \t\t}\r\n  \t\treturn state.notes\r\n  \t},\r\n  \t'EDIT_NOTE'(state, changes) {\r\n  \t\tif (changes) {\r\n  \t\t\tlet editNote = state.notes.find(function(note) {if (note.id == changes.id) {return note}});\r\n  \t\t\tlet indexNote = state.notes.indexOf(editNote);\r\n  \t\t\teditNote.note = changes.edit;\r\n  \t\t\tstate.notes.splice(indexNote, 1, editNote);\r\n  \t\t\treturn state.notes\r\n  \t\t}\r\n  \t}\r\n  },\r\n  actions: {\r\n  \tnewSubject({ commit }, subject) {\r\n  \t\tcommit('NEW_SUBJECT', subject)\r\n  \t},\r\n  \tnewSection({ commit }, section) {\r\n  \t\tcommit('NEW_SECTION', section);\r\n  \t},\r\n  \tnewNote({ commit }, note) {\r\n  \t\tcommit('NEW_NOTE', note)\r\n  \t},\r\n  \teditNote({ commit }, changes) {\r\n  \t\tcommit('EDIT_NOTE', changes)\r\n  \t}\r\n  },\r\n  getters: {\r\n  \tgetSubjects (state) {\r\n  \t\treturn state.subjects\r\n  \t},\r\n  \tgetSections (state) {\r\n  \t\treturn (sub) => state.sections.filter(sec => sec.subject_id == sub)\r\n  \t},\r\n  \tgetNotes (state) {\r\n  \t\treturn (sub, sec) => state.notes.filter(note => (note.subject_id == sub && note.section_id == sec))\r\n  \t}\r\n  }\r\n})\r\n"]}]}