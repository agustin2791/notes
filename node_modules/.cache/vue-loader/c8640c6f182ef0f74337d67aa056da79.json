{"remainingRequest":"D:\\software\\notes\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\software\\notes\\src\\components\\Notes.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\software\\notes\\src\\components\\Notes.vue","mtime":1551034904563},{"path":"D:\\software\\notes\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1550735037900},{"path":"C:\\Users\\Agustin\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\software\\notes\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1550735037900},{"path":"D:\\software\\notes\\node_modules\\vue-loader\\lib\\index.js","mtime":1550735047770}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  props: ['subject', 'section'],\r\n  data () {\r\n    return {\r\n    \tnotes: [],\r\n    \tnewNoteDisplay: false,\r\n\t    newNote: null,\r\n\t    editCurrentNote: null,\r\n\t    isEditing: false,\r\n\t    noteEdit: null\r\n    }\r\n  },\r\n  methods: {\r\n  \tcreateNewNote(e) {\r\n  \t\te.preventDefault()\r\n  \t\tlet nuNote = {\r\n  \t\t\tnote: this.newNote,\r\n  \t\t\tsubject_id: this.subject,\r\n  \t\t\tsection_id: this.section,\r\n  \t\t\tuser_id: 1\r\n  \t\t}\r\n  \t\tthis.$store.dispatch('newNote', nuNote)\r\n  \t\tthis.notes = this.$store.getters.getNotes(this.subject, this.section)\r\n  \t\tthis.newNoteDisplay = false\r\n  \t\tthis.newNote = null\r\n  \t},\r\n  \tstartEdit(note_id) {\r\n  \t\tlet toEdit = this.notes.find(function(note) {\r\n  \t\t\tif (note.id == note_id) {\r\n  \t\t\t\treturn note\r\n  \t\t\t}\r\n  \t\t})\r\n  \t\tthis.noteEdit = toEdit.note\r\n  \t\tthis.editCurrentNote = note_id\r\n  \t},\r\n  \tsaveEdit(note_id) {\r\n  \t\tthis.$store.dispatch('editNote', {id: note_id, edit: this.noteEdit})\r\n  \t\tthis.notes = this.$store.getters.getNotes(this.subject, this.section)\r\n  \t\tthis.noteEdit = null\r\n  \t\tthis.editCurrentNote = null\r\n  \t},\r\n  \tclearEdit() {\r\n  \t\tthis.editCurrentNote = null\r\n  \t\tthis.noteEdit = null\r\n  \t}\r\n  },\r\n  watch: {\r\n  \tsection() {\r\n  \t\tthis.notes = this.$store.getters.getNotes(this.subject, this.section)\r\n  \t}\r\n  },\r\n  created() {\r\n  \tthis.notes = this.$store.getters.getNotes(this.subject, this.section)\r\n  }\r\n}\r\n",{"version":3,"sources":["Notes.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Notes.vue","sourceRoot":"src/components","sourcesContent":["<template scope=\"props\">\r\n\t<div class=\"notes\">\r\n\t\t<br>\r\n\t\t<button class=\"btn btn-primary\"\r\n\t\t\t@click=\"newNoteDisplay = true\">\r\n\t\t\tAdd Note\r\n\t\t</button>\r\n\t\t<br>\r\n\t\t<br>\r\n\t\t<div v-if=\"newNoteDisplay\"\r\n\t\t\tclass=\"form-group\">\r\n\t\t\t<form>\r\n\t\t\t\t<textarea-autosize \r\n\t\t\t\t\tv-model=\"newNote\"\r\n\t\t\t\t\tclass=\"form-control\"></textarea-autosize>\r\n\t\t\t\t<br>\r\n\t\t\t\t<button class=\"btn btn-primary\"\r\n\t\t\t\t\t\t@click=\"createNewNote($event)\">Submit</button>\r\n\t\t\t\t<button class=\"btn btn-default\"\r\n\t\t\t\t\t@click=\"newNoteDisplay = false\">\r\n\t\t\t\t\tCancel\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t\t<hr>\r\n\t\t<div v-for=\"note in notes\"\r\n\t\t\t :key=\"note.id\">\r\n\t\t\t<div v-if=\"editCurrentNote == note.id\">\r\n\t\t\t\t<textarea-autosize v-model=\"noteEdit\"\r\n\t\t\t\t\tclass=\"form-control\"></textarea-autosize>\r\n\t\t\t\t<button class=\"btn btn-primary\"\r\n\t\t\t\t\t@click.prevent=\"saveEdit(note.id)\">\r\n\t\t\t\t\tSave\r\n\t\t\t\t</button>\r\n\t\t\t\t<button class=\"btn btn-default\"\r\n\t\t\t\t\t@click.preven=\"clearEdit\">\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<p \r\n\t\t\t\tstyle=\"white-space: pre\"\r\n\t\t\t\t@click=\"startEdit(note.id)\"\r\n\t\t\t\tv-else>{{ note.note }}</p>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script type=\"text/javascript\">\r\nexport default {\r\n  props: ['subject', 'section'],\r\n  data () {\r\n    return {\r\n    \tnotes: [],\r\n    \tnewNoteDisplay: false,\r\n\t    newNote: null,\r\n\t    editCurrentNote: null,\r\n\t    isEditing: false,\r\n\t    noteEdit: null\r\n    }\r\n  },\r\n  methods: {\r\n  \tcreateNewNote(e) {\r\n  \t\te.preventDefault()\r\n  \t\tlet nuNote = {\r\n  \t\t\tnote: this.newNote,\r\n  \t\t\tsubject_id: this.subject,\r\n  \t\t\tsection_id: this.section,\r\n  \t\t\tuser_id: 1\r\n  \t\t}\r\n  \t\tthis.$store.dispatch('newNote', nuNote)\r\n  \t\tthis.notes = this.$store.getters.getNotes(this.subject, this.section)\r\n  \t\tthis.newNoteDisplay = false\r\n  \t\tthis.newNote = null\r\n  \t},\r\n  \tstartEdit(note_id) {\r\n  \t\tlet toEdit = this.notes.find(function(note) {\r\n  \t\t\tif (note.id == note_id) {\r\n  \t\t\t\treturn note\r\n  \t\t\t}\r\n  \t\t})\r\n  \t\tthis.noteEdit = toEdit.note\r\n  \t\tthis.editCurrentNote = note_id\r\n  \t},\r\n  \tsaveEdit(note_id) {\r\n  \t\tthis.$store.dispatch('editNote', {id: note_id, edit: this.noteEdit})\r\n  \t\tthis.notes = this.$store.getters.getNotes(this.subject, this.section)\r\n  \t\tthis.noteEdit = null\r\n  \t\tthis.editCurrentNote = null\r\n  \t},\r\n  \tclearEdit() {\r\n  \t\tthis.editCurrentNote = null\r\n  \t\tthis.noteEdit = null\r\n  \t}\r\n  },\r\n  watch: {\r\n  \tsection() {\r\n  \t\tthis.notes = this.$store.getters.getNotes(this.subject, this.section)\r\n  \t}\r\n  },\r\n  created() {\r\n  \tthis.notes = this.$store.getters.getNotes(this.subject, this.section)\r\n  }\r\n}\r\n</script>\r\n"]}]}