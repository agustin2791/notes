{
  "_from": "dart",
  "_id": "dart@0.49.0",
  "_inBundle": false,
  "_integrity": "sha512-arbIxaBpSEuFIfhDCrk2dNziq2vnXfSw0Ww7i0Dcl70bQohT9DlFrF9N03u54ZqGOF5Fxn5q+kfzgMQko0AIoA==",
  "_location": "/dart",
  "_phantomChildren": {
    "ajv": "6.9.1",
    "ajv-errors": "1.0.1",
    "ajv-keywords": "3.4.0",
    "loader-utils": "1.2.3"
  },
  "_requested": {
    "escapedName": "dart",
    "fetchSpec": "latest",
    "name": "dart",
    "raw": "dart",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/dart/-/dart-0.49.0.tgz",
  "_shasum": "3063ed2ecec0ea16d404d10870f66331d389ab3e",
  "_shrinkwrap": null,
  "_spec": "dart",
  "_where": "D:\\software\\notes",
  "author": {
    "email": "eser@ozvataf.com",
    "name": "Eser Ozvataf"
  },
  "bin": {
    "dart": "./bin/dart"
  },
  "bugs": {
    "url": "https://github.com/eserozvataf/dart/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "Eser Ozvataf",
      "email": "eser@ozvataf.com",
      "url": "http://eser.ozvataf.com/"
    }
  ],
  "dependencies": {
    "autoprefixer": "^9.3.1",
    "case-sensitive-paths-webpack-plugin": "^2.1.2",
    "colors": "^1.3.2",
    "copy-webpack-plugin": "^4.5.4",
    "cross-spawn": "^6.0.5",
    "css-loader": "^1.0.0",
    "cssnano": "^4.1.7",
    "dotenv-webpack": "^1.5.7",
    "es6-promise": "^4.2.5",
    "eslint": "^5.8.0",
    "eslint-plugin-import": "^2.14.0",
    "express": "^4.16.4",
    "extract-css-chunks-webpack-plugin": "^3.2.1",
    "file-loader": "^2.0.0",
    "html-webpack-plugin": "^3.2.0",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^23.6.0",
    "node-fetch": "^2.2.0",
    "node-sass": "^4.9.4",
    "postcss": "^7.0.5",
    "postcss-import": "^12.0.1",
    "postcss-loader": "^3.0.0",
    "postcss-modules": "^1.4.1",
    "postcss-nesting": "^7.0.0",
    "sass-loader": "^7.1.0",
    "ts-jest": "^23.10.4",
    "ts-loader": "^5.2.2",
    "tsconfig-paths-webpack-plugin": "^3.2.0",
    "tslib": "^1.9.3",
    "typescript": "^3.1.3",
    "typescript-eslint-parser": "^20.0.0",
    "typings-for-css-modules-loader": "^1.7.0",
    "url-loader": "^1.1.2",
    "webpack": "^4.23.1",
    "webpack-async-chunk-names-plugin": "^0.1.1",
    "webpack-bundle-analyzer": "^3.0.3",
    "webpack-cli": "^3.1.2",
    "webpack-dev-server": "^3.1.10",
    "webpack-node-externals": "^1.7.2",
    "whatwg-fetch": "^3.0.0"
  },
  "deprecated": "use darty package instead, see README of darty for deprecation details.",
  "description": "Dart",
  "devDependencies": {
    "@types/express": "^4.16.0",
    "@types/jest": "^23.3.8",
    "@types/node": "^10.12.0",
    "@types/webpack": "^4.4.17"
  },
  "engines": {
    "node": ">=8.10.0"
  },
  "files": [
    "bin",
    "core",
    "templates"
  ],
  "homepage": "https://github.com/eserozvataf/dart",
  "keywords": [
    "boilerplate",
    "spa",
    "starter",
    "typed",
    "typescript"
  ],
  "license": "Apache-2.0",
  "main": "./bin/dart",
  "name": "dart",
  "optionalDependencies": {},
  "readme": "# [Dart](https://github.com/eserozvataf/dart)\n\nDart is a front-end development system to allow developers to start their projects\nimmediately. By Dart's convention over configuration mindset, webpack and typescript\ncompiler configurations are handled by dart's itself.\n\nThis project is the product of many years of iterative development and combined\ncommunity knowledge. However you're free to architect your code in the way that\nyou want, you'll be starting with a structured, scaleable and adaptable basecode.\n\n* Sample React App Source: [https://github.com/eserozvataf/dart-react-app](https://github.com/eserozvataf/dart-react-app)\n* Sample React App Preview: [http://dart-react-app.s3-website-eu-west-1.amazonaws.com](http://dart-react-app.s3-website-eu-west-1.amazonaws.com)\n\n\n## Features\n\n* Transforms ES2015+Typescript files with .ts/.tsx extension into browser-compatible JavaScript code.\n* Module bundling for packing everything into modules with their sourcemaps.\n* Dynamic code splitting.\n* SASS compilation of .scss files.\n* CSS Modules.\n* Minification for stylesheets and scripts.\n* Hot module reloading and continuous development environment.\n* Isomorphic/Universal codebase between server and client.\n* Server-side rendering.\n* IntelliSense support on TypeScript.\n* Unit-testing setup and TDD-ready environment.\n* JavaScript and TypeScript linting.\n* Autoprefixed CSS to avoid adding vendor prefixes.\n* Containerization-ready for continuous integration/deployment environments.\n\n\n## Fixed and Extensible Parts\n\nStatic components are:\n* Jest for tests, ESLint for linting.\n* Webpack for module bundling.\n* express for server-side rendering.\n\nThe rest are depends on the preset chosen.\n\nReact preset broughts react components and setup,\nVue preset broughts vue setup and etc.\n\n\n## Quick start\n\nEnsure that `node.js` is installed on your system first.\n\n### Alternative 1\nUse the following command to create app with [create-dart-app](https://github.com/eserozvataf/create-dart-app):\n\n```sh\nnpx create-dart-app react app\ncd app\nnpm run dev\n```\n\n### Alternative 2\nClone a sample app's git repo `git clone\n   https://github.com/eserozvataf/dart-react-app.git` - and checkout the [tagged\n   release](https://github.com/eserozvataf/dart-react-app/releases) you'd like to\n   use.\n\nExecute `npm install` to install dependencies. Then run `npm run dev` for starting\ndevelopment environment.\n\n\n## Dart Tasks\n\nUse `dart [task]` command in project folder to execute tasks defined in `package.json`.\n\n| Task                     | Description                                                                            |\n|--------------------------|----------------------------------------------------------------------------------------|\n| `bundle`                 | Builds the project, generates required files                                           |\n| `bundle:prod`            | Builds the project, generates required files (production)                              |\n| `start`                  | Starts SSR-enabled express server                                                      |\n| `dev`                    | Enables live development environment powered by hot module reloading                   |\n| `lint`                   | Executes linter to check codebase against linting errors                               |\n| `test`                   | Runs tests to check codebase against unit testing scenerios                            |\n| `containerize`           | Creates containerization files and gives instructions for docker                       |\n\n\n## Todo List\n\n- Eject\n- BrowserSync support\n- Service Workers\n\nSee [GitHub Projects](https://github.com/eserozvataf/dart/projects) for more.\n\n\n## Requirements\n\n* node.js (https://nodejs.org/)\n\n\n## License\n\nApache 2.0, for further details, please see [LICENSE](LICENSE) file\n\n\n## Contributing\n\nSee [contributors.md](contributors.md)\n\nIt is publicly open for any contribution. Bugfixes, new features and extra modules are welcome.\n\n* To contribute to code: Fork the repo, push your changes to your fork, and submit a pull request.\n* To report a bug: If something does not work, please report it using [GitHub Issues](https://github.com/eserozvataf/dart/issues).\n\n\n## To Support\n\n[Visit my patreon profile at patreon.com/eserozvataf](https://www.patreon.com/eserozvataf)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/eserozvataf/dart.git"
  },
  "version": "0.49.0",
  "warnings": [
    {
      "code": "ENOTSUP",
      "required": {
        "node": ">=8.10.0"
      },
      "pkgid": "dart@0.49.0"
    },
    {
      "code": "ENOTSUP",
      "required": {
        "node": ">=8.10.0"
      },
      "pkgid": "dart@0.49.0"
    }
  ]
}
